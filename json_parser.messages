json: LBRACKET RBRACKET STRING
##
## Ends in an error in state: 38.
##
## json -> LBRACKET loption(separated_nonempty_list(COMMA,field)) RBRACKET . EOF [ # ]
##
## The known suffix of the stack is as follows:
## LBRACKET loption(separated_nonempty_list(COMMA,field)) RBRACKET
##

Unexpected value after end of object

json: LBRACKET RSQUARE
##
## Ends in an error in state: 1.
##
## json -> LBRACKET . loption(separated_nonempty_list(COMMA,field)) RBRACKET EOF [ # ]
##
## The known suffix of the stack is as follows:
## LBRACKET
##

Unexpected list in object key

json: LBRACKET STRING COLON LBRACKET RSQUARE
##
## Ends in an error in state: 28.
##
## json_value -> LBRACKET . loption(separated_nonempty_list(COMMA,field)) RBRACKET [ RBRACKET COMMA ]
##
## The known suffix of the stack is as follows:
## LBRACKET
##

Unexpected list termination in object key position

json: LBRACKET STRING COLON LSQUARE LBRACKET RSQUARE
##
## Ends in an error in state: 13.
##
## json_value -> LBRACKET . loption(separated_nonempty_list(COMMA,field)) RBRACKET [ RSQUARE COMMA ]
##
## The known suffix of the stack is as follows:
## LBRACKET
##

Unclosed object inside list

json: LBRACKET STRING COLON LSQUARE LSQUARE RBRACKET
##
## Ends in an error in state: 12.
##
## json_value -> LSQUARE . loption(separated_nonempty_list(COMMA,json_value)) RSQUARE [ RSQUARE COMMA ]
##
## The known suffix of the stack is as follows:
## LSQUARE
##

Unclosed list inside object

json: LBRACKET STRING COLON LSQUARE MINUS STRING
##
## Ends in an error in state: 10.
##
## json_value -> MINUS . INT [ RSQUARE COMMA ]
##
## The known suffix of the stack is as follows:
## MINUS
##

Unexpected arithmetic operation applied to non number value inside list

json: LBRACKET STRING COLON LSQUARE PLUS EOF
##
## Ends in an error in state: 19.
##
## json_value -> option(PLUS) . INT [ RSQUARE COMMA ]
##
## The known suffix of the stack is as follows:
## option(PLUS)
##

Unexpected arithmetic operation applied to non number value

json: LBRACKET STRING COLON LSQUARE RBRACKET
##
## Ends in an error in state: 8.
##
## json_value -> LSQUARE . loption(separated_nonempty_list(COMMA,json_value)) RSQUARE [ RBRACKET COMMA ]
##
## The known suffix of the stack is as follows:
## LSQUARE
##

Unclosed list in object field

json: LBRACKET STRING COLON LSQUARE STRING COMMA RSQUARE
##
## Ends in an error in state: 24.
##
## separated_nonempty_list(COMMA,json_value) -> json_value COMMA . separated_nonempty_list(COMMA,json_value) [ RSQUARE ]
##
## The known suffix of the stack is as follows:
## json_value COMMA
##

Trailing separator in list

json: LBRACKET STRING COLON LSQUARE STRING STRING
##
## Ends in an error in state: 23.
##
## separated_nonempty_list(COMMA,json_value) -> json_value . [ RSQUARE ]
## separated_nonempty_list(COMMA,json_value) -> json_value . COMMA separated_nonempty_list(COMMA,json_value) [ RSQUARE ]
##
## The known suffix of the stack is as follows:
## json_value
##

Missing list separator between values

json: LBRACKET STRING COLON MINUS STRING
##
## Ends in an error in state: 6.
##
## json_value -> MINUS . INT [ RBRACKET COMMA ]
##
## The known suffix of the stack is as follows:
## MINUS
##

Unexpected arithmetic operation on non number value

json: LBRACKET STRING COLON PLUS EOF
##
## Ends in an error in state: 32.
##
## json_value -> option(PLUS) . INT [ RBRACKET COMMA ]
##
## The known suffix of the stack is as follows:
## option(PLUS)
##

Expecting number before end of input

json: LBRACKET STRING COLON RSQUARE
##
## Ends in an error in state: 3.
##
## separated_nonempty_list(COMMA,field) -> STRING COLON . json_value [ RBRACKET ]
## separated_nonempty_list(COMMA,field) -> STRING COLON . json_value COMMA separated_nonempty_list(COMMA,field) [ RBRACKET ]
##
## The known suffix of the stack is as follows:
## STRING COLON
##

Invalid list

json: LBRACKET STRING COLON STRING COMMA RSQUARE
##
## Ends in an error in state: 35.
##
## separated_nonempty_list(COMMA,field) -> STRING COLON json_value COMMA . separated_nonempty_list(COMMA,field) [ RBRACKET ]
##
## The known suffix of the stack is as follows:
## STRING COLON json_value COMMA
##

Missing field key or value

json: LBRACKET STRING COLON STRING STRING
##
## Ends in an error in state: 34.
##
## separated_nonempty_list(COMMA,field) -> STRING COLON json_value . [ RBRACKET ]
## separated_nonempty_list(COMMA,field) -> STRING COLON json_value . COMMA separated_nonempty_list(COMMA,field) [ RBRACKET ]
##
## The known suffix of the stack is as follows:
## STRING COLON json_value
##

Missing field separartor

json: LBRACKET STRING STRING
##
## Ends in an error in state: 2.
##
## separated_nonempty_list(COMMA,field) -> STRING . COLON json_value [ RBRACKET ]
## separated_nonempty_list(COMMA,field) -> STRING . COLON json_value COMMA separated_nonempty_list(COMMA,field) [ RBRACKET ]
##
## The known suffix of the stack is as follows:
## STRING
##

Missing field value

json: STRING
##
## Ends in an error in state: 0.
##
## json' -> . json [ # ]
##
## The known suffix of the stack is as follows:
##
##

Json top level value must be an oject
